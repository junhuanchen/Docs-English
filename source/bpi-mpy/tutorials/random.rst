Random generator
===============

Randomness
--------------------

What is randomness?

Randomness means unpredictability, and true randomness exists only in the natural world. Wherever there is lightning, it is random; if there is a place that is brewing a storm, it is quite certain that there will be lightning, but it is impossible to accurately predict the specific location, so don't stand under the tree. For example, the teacher wants the classmates to answer the questions, but none of the classmates raise their hands to answer the questions. At this time, the teacher randomly called a seat number, and the seat number is also random.

MicroPython comes with a random number module that makes it easy to introduce random numbers into your code. For example, here's an example of how to scroll a random name on the screen:

.. code:: python

    From microbit import *
    Import random

    Names = ["Mary", "Yolanda", "Damien", "Alia", "Kushal", "Mei Xiu", "Zoltan" ]

    Display.scroll(random.choice(names))

The names contain strings of 7 different names. Use the random.choice method to take a list (names) as a parameter and return a randomly selected item. This item (randomly chosen name) is used as a parameter to display.scroll. The effect is that you can see the randomly selected name on the led display panel.

random number
--------------------

Random numbers are very useful. They are very common in games, such as scorpions. MicroPython provides some useful random number methods. Let me make a simple dice, sample code:

.. code:: python

    From microbit import *
    Import random

    Display.show(str(random.randint(1, 6)))

Each time the board executes this function, it will display a number between 1 and 6. Random.randint() returns an integer (including 6) between two arguments 1 and 6. Note that because the show function requires a character to display, the str function is used here to convert the value to a character (for example, we convert 6 to "6" by str(6)).
If you want a number between 0 and N, use the random.randrange() function. If you give it a parameter, it will return a random integer, but does not include the value of the parameter N (this is different from random.randint()). Sometimes you need a number with a decimal point. These are called floating point numbers. How do you generate random floating point numbers? At this time, you should use random.random(). This function will only return floating point numbers between 0.0 and 1.0. So how do you generate a larger number of floating point numbers? You should have an answer in your heart. That is to use both random.randrange and random.random

.. code:: python


    From microbit import *
    Import random

    Answer = random.randrange(100) + random.random()
    Display.scroll(str(answer))

Seed random number
--------------------

The random number generator used by the computer is not a true random number generator. They are just a number generated by a random seed. How did the number of seeds come from? Usually comes from time or sensor readings, such as timers and thermometers built into the chip.

Sometimes you want to have repeatable random behavior: a reproducible random source. For example, every time you roll a dice, you need the same random value. This is easily done by setting the seed value. Given a known seed, the random number generator will create the same set of random numbers. Seeds are artificially set, and this version of the dice program always produces the same result.

.. code:: python

    From microbit import *
    Import random

    Random.seed(1337)
    While True:
        If button_a.was_pressed():
            Â Display.show(str(random.randint(1, 6)))

Running the above program we always get the same result, showing '5' on the led panel, because the seed we give here is a fixed value, so this program always produces a fixed number.